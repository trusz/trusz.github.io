"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[595],{9613:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(9496);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),p=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,f=d["".concat(i,".").concat(m)]||d[m]||c[m]||o;return n?r.createElement(f,s(s({ref:t},u),{},{components:n})):r.createElement(f,s({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var p=2;p<o;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2223:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return c}});var r=n(5443),a=n(3010),o=(n(9496),n(9613)),s=["components"],l={},i="Barrel Pattern",p={unversionedId:"frontend/barrel-pattern",id:"frontend/barrel-pattern",title:"Barrel Pattern",description:"Handling folders in JavaScript/TypeScript projects as packages makes encapsulation",source:"@site/garden/guides/frontend/barrel-pattern.md",sourceDirName:"frontend",slug:"/frontend/barrel-pattern",permalink:"/garden/guides/frontend/barrel-pattern",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Front End",permalink:"/garden/guides/category/front-end"},next:{title:"File Naming Convention",permalink:"/garden/guides/frontend/file-naming-convention"}},u={},c=[{value:"Rules",id:"rules",level:3}],d={toc:c};function m(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"barrel-pattern"},"Barrel Pattern"),(0,o.kt)("p",null,"Handling folders in JavaScript/TypeScript projects as packages makes encapsulation\neasier and the structure clearer. "),(0,o.kt)("p",null,"In the barrel pattern a folder re-exports items from its files and sub-folders",(0,o.kt)("br",{parentName:"p"}),"\n","through an ",(0,o.kt)("inlineCode",{parentName:"p"},"index.ts")," file, like a barrel and its tap. This makes the code more readable and, if used correctly, more robust because internals of a package/folder do not leak out and we use only that is made public through the ",(0,o.kt)("inlineCode",{parentName:"p"},"index.ts"),"."),(0,o.kt)("p",null,"In short, ",(0,o.kt)("inlineCode",{parentName:"p"},"index.ts")," defines a folder's/package's public API."),(0,o.kt)("h3",{id:"rules"},"Rules"),(0,o.kt)("details",{open:!0},(0,o.kt)("summary",null,"A folder is a package if it contains an ",(0,o.kt)("code",null,"index.ts"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-txt"},"package-one/\n\u2514\u2500index.ts\n"))),(0,o.kt)("details",null,(0,o.kt)("summary",null,"A package can have sub-packages."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-txt"},"package-one/\n\u251c\u2500index.ts\n\u2514\u2500package-two/\n  \u2514\u2500index.ts\n"))),(0,o.kt)("details",null,(0,o.kt)("summary",null,"A package can import items from its direct sub-packages."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-txt"},"root/\n\u251c\u2500\u2500 main.ts\n\u2514\u2500\u2500 restaurant/\n    \u251c\u2500\u2500 index.ts\n    \u251c\u2500\u2500 prepare.ts\n    \u2514\u2500\u2500 food/\n        \u251c\u2500\u2500 index.ts\n        \u2514\u2500\u2500 food.ts\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// main.ts\nimport { prepare } from './restaurant'\n\nconst pizza = ...\nprepare(pizza)\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// restaurant/index.ts\nexport { prepare } from './prepare.ts\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// restaurant/prepare.ts\nimport { Food } from './food'\n\nexport function prepare(food: Food){ ... }\n\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// restaurant/food/index.ts\nexport { Food } from './food.ts\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// restaurant/food/food.ts\nexport interface Food{ ... }\n"))),(0,o.kt)("details",null,(0,o.kt)("summary",null,"A package can re-export items from its direct subpackages, but not from sub-packages of its direct sub-packages."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-txt"},"root/\n\u2514\u2500\u2500 restaurant/\n    \u251c\u2500\u2500 index.ts\n    \u2514\u2500\u2500 food/\n        \u251c\u2500\u2500 index.ts\n        \u2514\u2500\u2500 pizzas/\n            \u251c\u2500\u2500 index.ts\n            \u2514\u2500\u2500 margherita.ts\n\n\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// restaurant/index.ts\n\n// GOOD:\nexport { PizzaMargherita } from './food'\n\n// BAD:\nexport { margherita as PizzaMargherita} from './food/pizzas/margherita.ts\n\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// restaurant/food/index.ts\nexport { margherita as PizzaMargherita } from './pizzas'\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// restaurant/food/pizzas/index.ts\nexport { margherita } from './margherita.ts'\n"))),(0,o.kt)("details",null,(0,o.kt)("summary",null,"If a folder does not have an `index.ts` it is not a package and other packages can import from its sub-folders."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-txt"},"root/\n\u251c\u2500\u2500 main.ts\n\u2514\u2500\u2500 x\n    \u251c\u2500\u2500 types/\n    \u2502   \u251c\u2500\u2500 index.ts\n    \u2502   \u2514\u2500\u2500 user.ts\n    \u2514\u2500\u2500 log\n        \u251c\u2500\u2500 index.ts\n        \u251c\u2500\u2500 console.ts\n        \u2514\u2500\u2500 file.ts\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// main.ts\n\n// 'x' does not have an `index.ts` therefore not a package\nimport { User } from './x/types'\nimport { FileLogger, ConsoleLogger } from './x/log'\n\nconst fileLogger = new FileLogger('./log.txt')\nconst consoleLogger = new ConsoleLogger()\n\nconst user = new User()\n\nfileLogger.log(user)\nconsoleLogger.log(user)\n\n"))))}m.isMDXComponent=!0}}]);