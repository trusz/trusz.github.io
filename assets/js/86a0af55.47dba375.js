"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[120],{9613:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return m}});var r=t(9496);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(t),m=o,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return t?r.createElement(h,i(i({ref:n},c),{},{components:t})):r.createElement(h,i({ref:n},c))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3539:function(e,n,t){t.r(n),t.d(n,{assets:function(){return s},contentTitle:function(){return i},default:function(){return u},frontMatter:function(){return a},metadata:function(){return l},toc:function(){return p}});var r=t(4250),o=(t(9496),t(9613));const a={},i="UI Development in Docker",l={unversionedId:"frontend/ui-development-in-docker",id:"frontend/ui-development-in-docker",title:"UI Development in Docker",description:"Back in the day I have always struggled with setting up development environments for projects.",source:"@site/garden/guides/frontend/ui-development-in-docker.md",sourceDirName:"frontend",slug:"/frontend/ui-development-in-docker",permalink:"/garden/guides/frontend/ui-development-in-docker",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"UI Components' File Structure",permalink:"/garden/guides/frontend/ui-component-file-structure"},next:{title:"Structure",permalink:"/garden/guides/frontend/view-structure"}},s={},p=[{value:"The Basics",id:"the-basics",level:2},{value:"Testing Locally and Visually",id:"testing-locally-and-visually",level:2},{value:"Testing in CI/CD Pipeline",id:"testing-in-cicd-pipeline",level:2},{value:"Docker-Compose",id:"docker-compose",level:2}],c={toc:p};function u(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"ui-development-in-docker"},"UI Development in Docker"),(0,o.kt)("p",null,"Back in the day I have always struggled with setting up development environments for projects.",(0,o.kt)("br",{parentName:"p"}),"\n","It usually took hours and in some cases even days to get everything right.\nThe documentation was always outdated and missing key information.\nIf you had to work on multiple projects that used\ndifferent versions of SDKs and runtimes than the experience was even worse."),(0,o.kt)("p",null,"Then came the light-weight containerization popularized by ",(0,o.kt)("a",{parentName:"p",href:"https://www.docker.com/"},"Docker"),".\nThe main usage of containers is to run the software in the same environment on any hardware.\nIt runs the same way on my machine as in the cloud."),(0,o.kt)("p",null,"Using this feature of the containers I setup my projects almost the same way."),(0,o.kt)("h2",{id:"the-basics"},"The Basics"),(0,o.kt)("p",null,"The basic setup requires only:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"a ",(0,o.kt)("a",{parentName:"li",href:"https://docs.docker.com/compose/"},"docker-compose")," file"),(0,o.kt)("li",{parentName:"ul"},"a ",(0,o.kt)("a",{parentName:"li",href:"https://hub.docker.com/_/node"},"Node.js")," container"),(0,o.kt)("li",{parentName:"ul"},"a mapped port"),(0,o.kt)("li",{parentName:"ul"},"the project folder mounted into the container")),(0,o.kt)("p",null,"This approach ensures that everybody runs the same version of Node.js.\nFurthermore, to run it one only needs Docker."),(0,o.kt)("p",null,"The docker-compose file usually looks something like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'# An extract of the `docker-compose.yaml`\nversion: "3.6"\nservices:\n    ui:\n        image: "node:13.5-alpine"\n        ports:\n            - "3000:3000"\n        stdin_open: true\n        tty: true\n        working_dir: "/app"\n        volumes:\n            - .:/app\n        command: ["sh", "-c", "yarn install && yarn dev"]\n')),(0,o.kt)("p",null,"Alpine images keep the overhead low and the image small."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"yarn install && ...")," makes sure that we alway have the correct packages.\nThis step takes only a few seconds as the ",(0,o.kt)("inlineCode",{parentName:"p"},"node_modules")," are persisted outside of docker\nand does not have to be installed again and again."),(0,o.kt)("p",null,"If we run start the container with ",(0,o.kt)("inlineCode",{parentName:"p"},"docker-compose run --service-ports"),"\nwe get colors, animated progressbars and we can interact with clis, thanks to the\n",(0,o.kt)("inlineCode",{parentName:"p"},"stdin_open: true")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"tty: true"),"."),(0,o.kt)("p",null,"Mounting the folder enables file watcher for live refresh and hot reloading."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-txt"},"An overview of the basic setup\n                \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n                \u2502 \u25ce \u25cb \u25cb \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2502\n                \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524      O\n                \u2502 Any Browser  \u2502     /|\\  \n                \u2502              \u2502\u25c0\u2500\u2500  / \\  \n                \u2502              \u2502\n                \u2502              \u2502    USER  \n                \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                        \u2502\n                        \u25cf\n                        \u25e1\n                        \u2502\n                 localhost:3000\n                        \u2502\n                       \u250c\u2500\u2510\n              \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n              \u2502        \u2514\u2500\u2518        \u2502\n              \u2502         \u2502         \u2502\n              \u2502         \u25cf         \u2502\n              \u2502         \u25e1         \u2502\n              \u2502         \u2502         \u2502\n              \u2502  localhost:3000   \u2502\n              \u2502         \u2502         \u2502\n              \u2502   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502\n              \u2502   \u2502Development\u2502   \u2502\n              \u2502   \u2502  Server   \u2502   \u2502\n              \u2502   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502\n              \u2502         \u2502         \u2502\n              \u2502         \u25bc         \u2502\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u2502     \u250c \u2500 \u2500 \u2500       \u2502\n\u2502Project \u2502  \u250c\u2500\u2534\u2500\u2510     /app \u2502      \u2502\n\u2502 Folder \u2502\u2500\u2500\u2502   \u2502\u2500\u2500\u2500\u2502             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2514\u2500\u252c\u2500\u2518    \u2500 \u2500 \u2500 \u2518      \u2502\n              \u2502                   \u2502\n              \u2502Container: UI      \u2502\n              \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,o.kt)("h2",{id:"testing-locally-and-visually"},"Testing Locally and Visually"),(0,o.kt)("p",null,"For the best and safest results I use ",(0,o.kt)("a",{parentName:"p",href:"https://www.chromium.org/"},"Chromium")," that runs\nin the local environment outside of the container.\nThis is necessary to see the UI itself when working on the styling."),(0,o.kt)("p",null,"Chromium has to be launched with ",(0,o.kt)("inlineCode",{parentName:"p"},"--enable-automation")," so that the browser driver (",(0,o.kt)("a",{parentName:"p",href:"https://github.com/puppeteer/puppeteer"},"Chrome Puppeteer"),") can control it through websocket."),(0,o.kt)("p",null,"I usually have a shell script to do it, similar to this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"chromium=/Applications/Chromium.app/Contents/MacOS/Chromium\n$chromium --no-sandbox --enable-automation --remote-debugging-port=9922\n")),(0,o.kt)("p",null,"Chromium has a limitation who can control it:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"in headless mode (no visible UI), connections are allowed from any source address as the websocket listens on the wildcard IP: ",(0,o.kt)("inlineCode",{parentName:"li"},"0.0.0.0:9922")),(0,o.kt)("li",{parentName:"ul"},"in non-headless mode (visible UI), only the connections from localhost are allowed as the chromium\nswitches back to ",(0,o.kt)("inlineCode",{parentName:"li"},"127.0.0.0:9922")," (or ",(0,o.kt)("inlineCode",{parentName:"li"},"localhost:9922"),")")),(0,o.kt)("p",null,"Fortunately, the tests can connect from inside the container through ",(0,o.kt)("inlineCode",{parentName:"p"},"host.docker.internal:9922"),"\nmaking it seem like that they also runs on ",(0,o.kt)("inlineCode",{parentName:"p"},"localhost"),"."),(0,o.kt)("p",null,"The container also watches for file changes to re-run the tests."),(0,o.kt)("p",null,"The container has to open its port for the browser."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'# An extract of the `docker-compose.yaml`\nversion: "3.6"\nservices:\n  ui-dev:\n      image: "node:13.10"\n      stdin_open: true\n      tty: true\n      working_dir: "/app"\n      volumes:\n          - ./:/app\n      ports:\n          - 3000:3000\n      command: ["sh", "-c", "yarn install && yarn tdd"]\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-txt"},'An overview of the "Testing Locally and Visually" setup\n                               \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n                               \u2502 \u25ce \u25cb \u25cb \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2502\n                               \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n                               \u2502   Chromium   \u2502\n                        \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2502              \u2502\n                        \u2502      \u2502              \u2502\n                        \u2502      \u2502              \u2502\n                        \u25cf      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                        \u25e1              \u2502\n                        \u2502        localhost:9922\n                 localhost:3000        \u2502\n                        \u2502              \u25e0\n                       \u250c\u2500\u2510             \u25cf\n              \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n              \u2502        \u2514\u2500\u2518             \u2502             \u2502\n              \u2502         \u2502  host.docker.internal:9922 \u2502\n              \u2502         \u25cf              \u2502             \u2502\n              \u2502         \u25e1              \u2502             \u2502\n              \u2502         \u2502              \u2502             \u2502\n              \u2502  localhost:3000        \u2502             \u2502\n              \u2502         \u2502              \u2502             \u2502\n              \u2502   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2500\u2500\u2510          \u2502\n              \u2502   \u2502Development\u2502     \u2502Tests\u2502          \u2502\n              \u2502   \u2502  Server   \u2502     \u2514\u2500\u2500\u2500\u2500\u2500\u2518          \u2502\n              \u2502   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518        \u2502             \u2502\n              \u2502         \u2502              \u2502             \u2502\n              \u2502         \u25bc              \u2502             \u2502\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u2502     \u250c \u2500 \u2500 \u2500            \u2502             \u2502\n\u2502Project \u2502  \u250c\u2500\u2534\u2500\u2510     /app \u2502           \u2502             \u2502\n\u2502 Folder \u2502\u2500\u2500\u2502   \u2502\u2500\u2500\u2500\u2502       \u25c0\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2514\u2500\u252c\u2500\u2518    \u2500 \u2500 \u2500 \u2518                         \u2502\n              \u2502                                      \u2502\n              \u2502Container: UI                         \u2502\n              \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n')),(0,o.kt)("h2",{id:"testing-in-cicd-pipeline"},"Testing in CI/CD Pipeline"),(0,o.kt)("p",null,"The main difference between testing locally and in a pipeline is that we start\nup the production build of the UI and we start a separate container with the tests and\nheadless chromium. This is quite easy as Chromium and ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/puppeteer/puppeteer"},"Chrome Puppeteer")," are also available in a Docker container: ",(0,o.kt)("a",{parentName:"p",href:"https://hub.docker.com/search?q=puppeteer&type=image"},"Docker Hub"),"."),(0,o.kt)("p",null,"The source files are still mounted in so we don't have to build\nthe ",(0,o.kt)("inlineCode",{parentName:"p"},"Test")," container over and over again."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'# An extract of the `docker-compose.yaml`\nversion: "3.6"\nservices:\n  ui:\n   ...\n\n  test:\n    build:\n      context: .\n      dockerfile: "test.Dockerfile"\n    depends_on:\n      - ui\n    stdin_open: true\n    tty: true\n    working_dir: "/app"\n    volumes:\n        - ./:/app\n    command: ["sh", "-c", "yarn install && yarn test"]\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-txt"},'An overview of the "Testing in CI/CD Pipeline" setup\n              \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n              \u2502   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u2502\n              \u2502   \u2502 Headless \u2502    \u2502\n              \u2502   \u2502 Chromium \u2502\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25cf\n              \u2502   \u2502          \u2502    \u2502           \u25e1\n              \u2502   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2502           \u2502\n              \u2502         \u25b2         \u2502    localhost:3000\n              \u2502         \u2502         \u2502           \u2502\n              \u2502         \u2502         \u2502          \u250c\u2500\u2510\n              \u2502         \u2502         \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n              \u2502      \u250c\u2500\u2500\u2500\u2500\u2500\u2510      \u2502  \u2502       \u2514\u2500\u2518        \u2502\n              \u2502      \u2502Tests\u2502      \u2502  \u2502        \u2502         \u2502\n              \u2502      \u2514\u2500\u2500\u2500\u2500\u2500\u2518      \u2502  \u2502        \u25cf         \u2502\n              \u2502         \u2502         \u2502  \u2502        \u25e1         \u2502\n              \u2502         \u2502         \u2502  \u2502        \u2502         \u2502\n              \u2502         \u2502         \u2502  \u2502 localhost:3000   \u2502\n              \u2502         \u25bc         \u2502  \u2502        \u2502         \u2502\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u2502     \u250c \u2500 \u2500 \u2500       \u2502  \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502\n\u2502Project \u2502  \u250c\u2500\u2534\u2500\u2510     /app \u2502      \u2502  \u2502  \u2502Production \u2502   \u2502\n\u2502 Folder \u2502\u2500\u2500\u2502   \u2502\u2500\u2500\u2500\u2502             \u2502  \u2502  \u2502  Server   \u2502   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2514\u2500\u252c\u2500\u2518    \u2500 \u2500 \u2500 \u2518      \u2502  \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502\n              \u2502                   \u2502  \u2502                  \u2502\n              \u2502Container: Test    \u2502  \u2502Container: UI     \u2502\n              \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n')),(0,o.kt)("h2",{id:"docker-compose"},"Docker-Compose"),(0,o.kt)("p",null,"The final ",(0,o.kt)("inlineCode",{parentName:"p"},"docker-compose.yaml")," looks like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'version: "3.6"\nservices:\n    ui:\n      image: "node:13.5-alpine"\n      ports:\n        - "3000:3000"\n      stdin_open: true\n      tty: true\n      working_dir: "/app"\n      volumes:\n        - .:/app\n      command: ["sh", "-c", "yarn install && yarn dev"]\n\n    ui-dev:\n      image: "node:13.10"\n      stdin_open: true\n      tty: true\n      working_dir: "/app"\n      volumes:\n        - ./:/app\n      ports:\n        - 3000:3000\n      command: ["sh", "-c", "yarn install && yarn tdd"]\n\n    test:\n      build:\n        context: .\n        dockerfile: "test.Dockerfile"\n      depends_on:\n        - ui\n      stdin_open: true\n      tty: true\n      working_dir: "/app"\n      volumes:\n        - ./:/app\n      command: ["sh", "-c", "yarn install && yarn test"]\n\n\n')))}u.isMDXComponent=!0}}]);