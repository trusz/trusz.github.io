"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[436],{9613:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(9496);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=p(n),f=a,m=d["".concat(s,".").concat(f)]||d[f]||l[f]||i;return n?r.createElement(m,o(o({ref:t},u),{},{components:n})):r.createElement(m,o({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2944:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return o},default:function(){return l},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return p}});var r=n(4250),a=(n(9496),n(9613));const i={},o="Structure",c={unversionedId:"frontend/view-structure",id:"frontend/view-structure",title:"Structure",description:"This document describes the architecture of views.",source:"@site/garden/guides/frontend/view-structure.md",sourceDirName:"frontend",slug:"/frontend/view-structure",permalink:"/garden/guides/frontend/view-structure",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"UI Development in Docker",permalink:"/garden/guides/frontend/ui-development-in-docker"},next:{title:"General Architecture",permalink:"/garden/guides/category/general-architecture"}},s={},p=[{value:"Concept",id:"concept",level:2},{value:"Folder Structure",id:"folder-structure",level:2}],u={toc:p};function l(e){let{components:t,...i}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"structure"},"Structure"),(0,a.kt)("p",null,"This document describes the architecture of views."),(0,a.kt)("h2",{id:"concept"},"Concept"),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(7874).Z,width:"5054",height:"1792"})),(0,a.kt)("p",null,"The main starting point is the ",(0,a.kt)("inlineCode",{parentName:"p"},"View"),".\nThe router opens the view and it configures the container.\nIt defines which ",(0,a.kt)("inlineCode",{parentName:"p"},"API")," is to use and passes it to the ",(0,a.kt)("inlineCode",{parentName:"p"},"Container"),"\nIf a ",(0,a.kt)("inlineCode",{parentName:"p"},"Mock API")," is implemented the ",(0,a.kt)("inlineCode",{parentName:"p"},"View")," can decide to use it.\nThis helps to work on the frontend without a backend running."),(0,a.kt)("p",null,"The main purpose of a ",(0,a.kt)("inlineCode",{parentName:"p"},"Container")," is to manage the dataflow and configure the components\nthat are displayed in a given layout.\nThe ",(0,a.kt)("inlineCode",{parentName:"p"},"Container")," defines an ",(0,a.kt)("inlineCode",{parentName:"p"},"API")," interface that it needs for the data management."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"Tests")," can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"Mock API")," or they can mock it as they need it."),(0,a.kt)("p",null,'The main advantage of this setup is that almost all of the code can be\ntested and only a small portion of the "glue" code has to be checked manually.'),(0,a.kt)("h2",{id:"folder-structure"},"Folder Structure"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-s"},"views/\n   \u2514\u2500 view-a\n        \u251c\u2500 index.ts\n        \u251c\u2500 view-a.t\n        \u251c\u2500 business-obj-1.ts\n        \u251c\u2500 business-obj-2.ts\n        \u251c\u2500 business-obj-2.spec.ts\n        \u251c\u2500 business-obj-n.ts\n        \u251c\u2500 container-a/\n        \u2502       \u251c\u2500 index.ts\n        \u2502       \u251c\u2500 api.ts\n        \u2502       \u251c\u2500 container-a.tsx\n        \u2502       \u251c\u2500 container-a.spec.tsx\n        \u2502       \u251c\u2500 layout.tsx\n        \u2502       \u251c\u2500 comp-1.tsx\n        \u2502       \u251c\u2500 comp-2.tsx\n        \u2502       \u251c\u2500 comp-2.spec.tsx\n        \u2502       \u2514\u2500 comp-n.tsx\n        \u2514\u2500 api/\n            \u251c\u2500 index.ts\n            \u251c\u2500 api-fn-1.ts\n            \u251c\u2500 api-fn-2.ts\n            \u251c\u2500 api-fn-n.ts\n            \u2514\u2500 mock/\n                 \u2502\n                 \u251c\u2500 index.ts\n                 \u251c\u2500 api-fn-1.ts\n                 \u251c\u2500 api-fn-2.ts\n                 \u2514\u2500 api-fn-n.ts\n")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"View")," and the business objects are on the top because changing them\ncan trigger the most change. They should be the most stable parts."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"container-a/")," represents the ",(0,a.kt)("inlineCode",{parentName:"p"},"Container"),". In this folder are things that\ntake of the main focus of the view."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"api.ts")," describes the interface that the container needs to manage the data."),(0,a.kt)("p",null,"We separate the components (",(0,a.kt)("inlineCode",{parentName:"p"},"comp-1.tsx"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"comp-2.txs"),", ... , ",(0,a.kt)("inlineCode",{parentName:"p"},"comp-n.tsx"),") and\nthe layout (",(0,a.kt)("inlineCode",{parentName:"p"},"layout.tsx"),") to separate concerns and let them be stitched together\nand managed by ",(0,a.kt)("inlineCode",{parentName:"p"},"container-a")," component."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"api/")," contains all the functionality and implementation of the API interface\nand also a mock implementation for isolated frontend development and testing."))}l.isMDXComponent=!0},7874:function(e,t,n){t.Z=n.p+"assets/images/view-structure-c52d4cdcb744236d2bf7b2471597f111.jpeg"}}]);